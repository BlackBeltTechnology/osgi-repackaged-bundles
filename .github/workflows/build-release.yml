name: Release bundle

on:
  workflow_dispatch:
    inputs:
      project:
        description: 'Subproject to deploy'
        required: true
      version:
        description: 'Version to deploy'
        required: true

jobs:
  build:
    name: ‚è≥ Build, test and deploy artifacts
    runs-on: judong
    timeout-minutes: 30
    env:
      SIGN_KEY_ID: ${{ secrets.GPG_KEYNAME }}
      SIGN_KEY_PASS: ${{ secrets.GPG_PASSPHRASE }}
      SIGN_KEY: ${{ secrets.GPG_SECRET_KEYS }}
    if: ${{ github.event.pull_request.user.login != 'dependabot[bot]' }}
    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
      - name: ‚¨áÔ∏è Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: üõ†Ô∏è Project context
        id: context
        uses: zero88/gh-project-context@v1.1

      - name: üõ†Ô∏è Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'zulu'
      - name: üßπ Remove settings.xml
        run: rm $HOME/.m2/settings.xml || true

      - name: üõ†Ô∏è Setup maven settings.xml
        uses: whelk-io/maven-settings-xml-action@v20
        with:
          servers: >
            [
                {
                    "id": "judong-nexus-mirror",
                    "username": "${{ secrets.JUDONG_NEXUS_USERNAME }}",
                    "password": "${{ secrets.JUDONG_NEXUS_PASSWORD }}"
                },
                {
                    "id": "judong-nexus-distribution",
                    "username": "${{ secrets.JUDONG_NEXUS_USERNAME }}",
                    "password": "${{ secrets.JUDONG_NEXUS_PASSWORD }}"
                },
                {
                    "id": "ossrh",
                    "username": "${{ secrets.SONATYPE_USERNAME }}",
                    "password": "${{ secrets.SONATYPE_PASSWORD }}"
                }
            ]
          mirrors: >
            [
                {
                    "id": "judong-nexus-mirror",
                    "mirrorOf": "*",
                    "url": "https://nexus.judo.technology/repository/maven-judong/"
                 }
            ]

      # Phase 1 - Build and deploy to judong nexus
      - name: üî• Deploy with Maven (central)
        run: |-
          ./mvnw -B -Dstyle.color=always \
          -Drevision=${{ github.event.inputs.version }} \
          -Psign-artifacts \
          -Prelease-judong \
          -f ${{ github.event.inputs.project }}/pom.xml \
          clean deploy

      # Phase 1 - Build and deploy to maven central
      - name: üéÅ Deploy with Maven (central)
        run: |- 
          ./mvnw -B -Dstyle.color=always \
          -Drevision=${{ github.event.inputs.version }} \
          -Prelease-central \
          -Psign-artifacts \
          -Dmaven.test.skip=true \
          -f ${{ github.event.inputs.project }}/pom.xml \
          clean deploy

      - name: üé§ Create message
        id: message
        if: ${{ always() }}
        run: |-
          if [ "${{ job.status }}" == "success" ]; then
            message=":white_check_mark: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            message="${message} Version: ${{ github.event.inputs.version }}"
          fi
          if [ "${{ job.status }}" == "failure" ]; then
            message=":x: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"    
          fi
          if [ "${{ job.status }}" == "canceled" ]; then
            message=":x: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"    
          fi
          echo "::set-output name=message::${message}"

      - name: üì¢ Send message to discord
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.JUDONG_DISCORD_WEBHOOK }}
          title: "Gitub action"
          description: "${{ steps.message.outputs.message }}"
